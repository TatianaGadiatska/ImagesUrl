package model

import (
	s "../view"
	"database/sql"
	"log"
)

func CreatTable(db *sql.DB) {

	db.Exec("delete from imgUrlTable")

	_, err := db.Exec("CREATE TABLE IF NOT EXISTS " +
		`img_Url_Color("id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,` +
		`"url_Name" varchar(100), "color" varchar(25))`)
	if err != nil {
		log.Print(err)
	} else {
		log.Println("Table created...")
	}
}

func InsertUrl(db *sql.DB, urlColorBd []s.RecordUrl) {

	var err error
	for _, uC := range urlColorBd {
		_, err = db.Exec("insert into img_Url_Color values(default, $1, $2)", uC.UrlImg, uC.Color)
	}
	if err != nil {
		log.Print(err)
	} else {
		log.Print("All added...")
	}
	log.Print("Insert OK")
}

func SelectUrl(db *sql.DB) []s.RecordUrl {

	rows, err := db.Query("SELECT * FROM img_Url_Color")
	if err != nil {
		log.Print(err)
	} else {
		log.Print("Request passed...")
	}
	defer rows.Close()
	var rs []s.RecordUrl
	var rec s.RecordUrl
	for rows.Next() {
		err = rows.Scan(&rec.Id, &rec.UrlImg, &rec.Color)
		if err != nil {
			log.Print(err)
		}
		rs = append(rs, rec)
	}
	return rs
}
